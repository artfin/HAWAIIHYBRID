/** 
 * @mainpage My Project Documentation
 *
 * @section navigation Navigation
 * - [Home](index.html)
 * - [Examples](@ref examples)
 * - [Reference](@ref input_reference)
 *
 * @section intro Introduction
 *    Welcome to the documentation for Hawaii Hybrid.
 * @tableofcontents
 *
 * Problems addressed by library
 * - Compute statistical averages over ensembles of classical trajectories restricted by chosen phase-space domains (e.g., bound or unbound states), enabling the calculation of dipole autocorrelation functions. 
 * - Calculate static phase-space averages using rejection sampling and adaptive Monte Carlo algorithms to estimate zeroth and second spectral moments.
 * - Transform correlation functions into spectral functions, apply smoothing, and convert them into spectral profiles.
 *   
 * To ensure clarity, we will outline the key objects and their corresponding units of measurement. In the context of this document, the correlation function of the dipole moment, 
 * \f$ C(t) \f$, is defined as:
 * \f[ 
 *   C(t) = V \langle \mu(0) \mu(t) \rangle.
 * \f]
 *
 * Note that this definition differs from others, such as the one in Ref. Chistikov2021, as it does not include the 
 * \f$ 1/(4 \pi \varepsilon_0) \f$ factor. Instead, this factor is incorporated into the definition of the spectral function. The correlation function values are produced by 
 * `calculate_correlation_and_save` and `calculate_correlation_array_and_save` in units of (m\f$^3 \cdot\f$ atomic unit of dipole\f$^2\f$). The time is treated internally in 
 * atomic time units, and the produced `CFnc` object stores the time in the atomic time units. 
 * The spectral function is defined as follows:
 * \f[ 
 *   G(\nu) = \frac{1}{2\pi} \frac{1}{4\pi \varepsilon_0} \int\limits_{-\infty}^{+\infty} C(t) e^{-2 \pi i c \nu t} \textrm{d}t,
 * \f]
 * where \f$\nu\f$ is the wavenumber (\f$\textrm{cm}^{-1}\f$). 
 * The values of spectral function are \f$\textrm{J} \cdot \textrm{m}^6 \cdot \textrm{s} = \textrm{kg} \cdot \textrm{m}^8 \cdot \textrm{s}\f$. 
 * 
 * The binary absorption coefficient is then related to the spectral function according to:
 * \f[ 
 *   \alpha(\nu) = \frac{\tau(\nu)}{\rho_1 \rho_2} = \frac{(2\pi)^4 N_L^2}{3 h} \nu \left[ 1 - \exp \left( -\frac{h c \nu}{k_\textrm{B} T} \right) \right] G(\nu),
 * \f] 
 *
 * where the absorption coefficient is
 * \f[
 *  \tau(\nu) = L^{-1} \ln (I_0 / I),
 * \f]
 * and \f$\rho_1\f$ and \f$\rho_2\f$ are gas densities in mixture. We will express the binary absorption coefficient as per convention in \f$\textrm{cm}^{-1}\cdot\textrm{Amagat}^{-2}\f$. 
 *
 * 
 * @section molecule_pair_setup Setting up a molecule pair
 *
 * @copybrief MonomerType   
 * @copydetails MonomerType
 * The @ref MonomerType enumeration has the following values: 
 * - @ref MonomerType::ATOM - @copybrief MonomerType::ATOM 
 * - @ref MonomerType::LINEAR_MOLECULE - @copybrief MonomerType::LINEAR_MOLECULE  
 * - @ref MonomerType::LINEAR_MOLECULE_REQ_INTEGER - @copybrief MonomerType::LINEAR_MOLECULE_REQ_INTEGER
 * - @ref MonomerType::LINEAR_MOLECULE_REQ_HALFINTEGER - @copybrief MonomerType::LINEAR_MOLECULE_REQ_HALFINTEGER
 * - @ref MonomerType::ROTOR - @copybrief MonomerType::ROTOR
 * - @ref MonomerType::ROTOR_REQUANTIZED_ROTATION - @copybrief MonomerType::ROTOR_REQUANTIZED_ROTATION
 *
 * @copybrief Monomer
 * @copydetails Monomer
 *
 * The @ref Monomer has the following fields:
 * - @ref Monomer::t -- @copybrief Monomer::t
 * - @ref Monomer::II -- @copybrief Monomer::II
 * - @ref Monomer::DJ -- @copybrief Monomer::DJ
 * - @ref Monomer::qp -- @copybrief Monomer::qp
 * - @ref Monomer::dVdq -- @copybrief Monomer::dVdq
 * - @ref Monomer::apply_requantization -- @copybrief Monomer::apply_requantization
 * - @ref Monomer::req_switch_counter -- @copybrief Monomer::req_switch_counter
 * - @ref Monomer::torque_cache_len -- @copybrief Monomer::torque_cache_len
 * - @ref Monomer::torque_limit -- @copybrief Monomer::torque_limit
 * - @ref Monomer::torque_cache -- @copybrief Monomer::torque_cache
 *
 */
